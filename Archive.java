/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author senhe
 */
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

public class Archive extends javax.swing.JFrame {
public static final String DB_URL = "jdbc:mysql://localhost/mydb?allowMultiQueries=true";
public static final String DB_Driver = "com.mysql.jdbc.Driver";
public static final String DB_Password = "Alushta2022";
public String filename;
public String path_to_file;
public int[] All_Authors = new int [100];
private int t = 1;
    /**
     * Creates new form Archive
     */
    public Archive() {
        initComponents();
        Connect();
        Table2();
        Table1();

    }
    SectionTimeplace getSection =new SectionTimeplace();
    AccocAuthorOrg getAuthors = new AccocAuthorOrg();
   
    Connection con;
    PreparedStatement pst;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void Connect(){
        try {
            Class.forName(DB_Driver);
            con = DriverManager.getConnection(DB_URL,"root",DB_Password);
            //System.out.println("connect");
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Archive.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Archive.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtRanking = new javax.swing.JTextField();
        txtgotFileName = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 32767));
        jSeparator1 = new javax.swing.JSeparator();
        jTextField3 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jToggleButton2 = new javax.swing.JToggleButton();
        txtgotSection = new javax.swing.JTextField();
        txtgotSectionDate = new javax.swing.JTextField();
        txtgotSectionPlace = new javax.swing.JTextField();
        txtgotSectionTIme = new javax.swing.JTextField();
        jToggleButton3 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        OchnoZaochnoBox = new javax.swing.JCheckBox();
        jToggleButton5 = new javax.swing.JToggleButton();
        jButton3 = new javax.swing.JButton();
        wipeFIle = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtPresentName = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Название доклада");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Секция");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setText("Место в рейтинге");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Источники");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel5.setText("Файл");

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Автор", "Организация", "Город", "Страна", "Очно/заочно"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(4).setMinWidth(100);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        txtRanking.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtgotFileName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jToggleButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jToggleButton1.setText(",,,");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel6.setText("Поиск по:");

        jTextField3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jTextField6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jTextField7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jTable2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Название", "Секция", "Рейтинг"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton5.setText("Найти");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton6.setText("Очистить");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel7.setText("Названию");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel8.setText("Секции");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel9.setText("Автору");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel10.setText("Организации");

        jToggleButton2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jToggleButton2.setText(",,,");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        txtgotSection.setEditable(false);
        txtgotSection.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtgotSection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgotSectionActionPerformed(evt);
            }
        });

        txtgotSectionDate.setEditable(false);
        txtgotSectionDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtgotSectionDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgotSectionDateActionPerformed(evt);
            }
        });

        txtgotSectionPlace.setEditable(false);
        txtgotSectionPlace.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtgotSectionTIme.setEditable(false);
        txtgotSectionTIme.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtgotSectionTIme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgotSectionTImeActionPerformed(evt);
            }
        });

        jToggleButton3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jToggleButton3.setText("Выбрать");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        jToggleButton4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jToggleButton4.setText("Выбрать");
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });

        OchnoZaochnoBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        OchnoZaochnoBox.setText("Очно(ВКЛ)");

        jToggleButton5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jToggleButton5.setText("Удалить");
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setText("...");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        wipeFIle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        wipeFIle.setText("Открепить");
        wipeFIle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wipeFIleActionPerformed(evt);
            }
        });

        txtPresentName.setColumns(20);
        txtPresentName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPresentName.setRows(5);
        txtPresentName.setTabSize(0);
        txtPresentName.setMaximumSize(new java.awt.Dimension(40, 24));
        jScrollPane3.setViewportView(txtPresentName);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel11.setText("Дата");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel12.setText("Место");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel13.setText("Время");

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Добавить");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton7.setText("Изменить");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setText("Удалить");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(jButton7)
                .addGap(61, 61, 61)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(181, 181, 181)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5)
                                .addGap(38, 38, 38)
                                .addComponent(jButton6)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jLabel11)
                        .addGap(17, 17, 17)
                        .addComponent(txtgotSectionDate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtgotSectionPlace, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(txtgotSectionTIme, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jToggleButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtgotSection, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(25, 25, 25)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtRanking, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtgotFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(wipeFIle)))
                            .addGap(192, 192, 192))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OchnoZaochnoBox))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtgotSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtgotSectionTIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txtgotSectionDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(txtgotSectionPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToggleButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(OchnoZaochnoBox)
                        .addComponent(jToggleButton5)
                        .addComponent(jToggleButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtRanking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtgotFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(wipeFIle))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(24, 24, 24))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            String getNamePresent = txtPresentName.getText();
            String ranking = txtRanking.getText();
            
            
            pst = con.prepareStatement("INSERT INTO mydb.report (name_present,id_section_report,final_ranking) values (?,?,?)");
            pst.setString(1,getNamePresent);
            pst.setInt(2,getSection.getId());
            pst.setString(3,ranking);
        
            int k = pst.executeUpdate();
        
        if(k==1)
        {
            JOptionPane.showMessageDialog(this, "Доклад добавлен");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Ошибка");
        }
        
        
        PreparedStatement pst2 = con.prepareStatement("select max(id_present) FROM mydb.report");
        ResultSet rs2 = pst2.executeQuery();
        int got_id_present= 0;
        while(rs2.next())
        { 
         got_id_present = rs2.getInt(1);
        }
        System.out.println("phase 1");
        if(!path_to_file.equals("")){
        File myFile = new File(path_to_file);
        PreparedStatement pst3 = con.prepareStatement("insert into mydb.file_storage(idfile_storage,name_file,link)values(?,?,?)");
        FileInputStream fin = new FileInputStream(myFile);
        pst3.setInt(1,got_id_present);
        pst3.setString(2,filename);
        pst3.setBlob(3,fin);
        pst3.executeUpdate();
        System.out.println("phase 2");
        }
        

        
        
        PreparedStatement pst4 = con.prepareStatement("insert into mydb.transit_table_reportauthor(id_present_tranistreport,id_written_by,ochno)values(?,?,?)");
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int getIDNow = 0;
        for (int count = 0; count < model.getRowCount(); count++){
            getIDNow=All_Authors[count];
            pst4.setInt(1,got_id_present);
            pst4.setInt(2,getIDNow);
            String org_name_get = jTable1.getModel().getValueAt(count, 4).toString();
            int ochno = 0;
            if(org_name_get.equals("+")){
                ochno=1;
            }
            pst4.setInt(3,ochno);
            pst4.executeUpdate(); 
            System.out.println("phase 3");
        }
        
        
        Table2();
    } catch (SQLException ex) {
        Logger.getLogger(Archive.class.getName()).log(Level.SEVERE, null, ex);
    } catch (FileNotFoundException ex) {
        Logger.getLogger(Archive.class.getName()).log(Level.SEVERE, null, ex);
    }       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
               try {
        String name_search = jTextField3.getText();
        pst = con.prepareStatement("SELECT report.name_present, report.final_ranking , section.section_name FROM mydb.report  INNER JOIN mydb.section ON section.id_section = (SELECT id_section_got FROM mydb.section_timeplace WHERE idsection_timeplace = (SELECT id_section_report FROM mydb.report WHERE name_present LIKE ?))");
        pst.setString(1,"%" + name_search + "%");
        ResultSet Rs = pst.executeQuery();
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            
        ResultSetMetaData RSMD = Rs.getMetaData();
        int CC = RSMD.getColumnCount();
        DefaultTableModel DFT = (DefaultTableModel) jTable2.getModel();
        DFT.setRowCount(0);
            
        while(Rs.next())
           {  
               Vector v2 = new Vector();
                for (int ii = 1; ii <= CC; ii++) {
                    v2.add(Rs.getString("name_present"));
                    v2.add(Rs.getString("section_name"));
                    v2.add(Rs.getString("final_ranking"));
                }
                DFT.addRow(v2);
        }
        jTable2.setModel(model);
        jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    } catch (SQLException ex) {
        Logger.getLogger(SectionForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jTextField3.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed

        getSection.setVisible(true);
        
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
       getAuthors.setVisible(true);
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void txtgotSectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgotSectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgotSectionActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed

        try {
        //System.out.println(getSection.getId());
        pst = con.prepareStatement("SELECT * FROM  mydb.section_timeplace WHERE idsection_timeplace = ?");
        pst.setInt(1,getSection.getId());

        ResultSet Rs = pst.executeQuery();
        int id_sect_get = 0;
        while(Rs.next())
           {  
               id_sect_get = Rs.getInt(2);
             txtgotSectionDate.setText(Rs.getString(3));
             txtgotSectionPlace.setText(Rs.getString(4));
             txtgotSectionTIme.setText(Rs.getString(5));
           }
    
    PreparedStatement pst2 = con.prepareStatement("SELECT section_name FROM mydb.section WHERE id_section =?");
    pst2.setInt(1,id_sect_get);
    ResultSet rs2 = pst2.executeQuery();
    while(rs2.next())
    { 
        txtgotSection.setText(rs2.getString(1));
    }
        
    
    
    
    } catch (SQLException ex) {
        Logger.getLogger(SectionForm.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void txtgotSectionDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgotSectionDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgotSectionDateActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
      
        addRoots();
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
                if(jTable1.getSelectedRow() != -1) {
               DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
               int[] copy = new int[10];
               
               for (int i = 0, j = 0; i < t-1; i++) {
                    if (i != jTable1.getSelectedRow()-1) {
                        copy[j++] = All_Authors[i];
                    }
                }
               
               All_Authors= copy;
               for (int i = 0; i < t-1; i++) {
                //System.out.println(All_Authors[i]);
                }
               model.removeRow(jTable1.getSelectedRow());
               JOptionPane.showMessageDialog(null, "Автор удален");
               t--;
            }
    }//GEN-LAST:event_jToggleButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       try{
           
           
           
        pst = con.prepareStatement("insert into mydb.file_storage(idfile_storage,name_file,link)values(?,?,?)");
        JFileChooser filechooser = new JFileChooser();
        //FileNameExtensionFilter filter = new FileNameExtensionFilter("pdf");
        //filechooser.setFileFilter(filter);
        //filechooser.setCurrentDirectory(new File("."));
       int response = filechooser.showOpenDialog(null);
       if(response == JFileChooser.APPROVE_OPTION){
           File myFile = new File(filechooser.getSelectedFile().getAbsolutePath());

           filename = myFile.getName();
           path_to_file = filechooser.getSelectedFile().getAbsolutePath();
            //System.out.println(filename);
           //System.out.println(path_to_file);
           txtgotFileName.setText(filename);
           try (FileInputStream fin = new FileInputStream(myFile)) {
               // pst.setString(2,myFile.getName());
               // pst.setString(3,filechooser.getSelectedFile().getAbsolutePath());

               // pst.executeUpdate();
                
            } catch (IOException ex) {
                System.out.println("Oooops");
               
            }
           
       } 
       } catch (SQLException ex) {
        Logger.getLogger(Archive.class.getName()).log(Level.SEVERE, null, ex);
    }
        

    }//GEN-LAST:event_jButton3ActionPerformed

    private void wipeFIleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wipeFIleActionPerformed
       filename = "";
       path_to_file = "";
    }//GEN-LAST:event_wipeFIleActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      try {
        int row = jTable2.getSelectedRow();
        String present_name_get = jTable2.getModel().getValueAt(row, 0).toString();

        pst = con.prepareStatement("SELECT id_present FROM mydb.report WHERE name_present = ?");
        pst.setString(1,present_name_get);
        ResultSet rs = pst.executeQuery();
       int got_id_present = 0;
        while(rs.next())
        { 
         got_id_present = rs.getInt(1);
        }
        
        
        pst = con.prepareStatement("DELETE FROM mydb.file_storage WHERE idfile_storage = ?");
        pst.setInt(1,got_id_present);
          int rs1 = pst.executeUpdate();
        System.out.println("phase1");
        pst = con.prepareStatement("DELETE FROM mydb.transit_table_reportauthor WHERE id_present_tranistreport = ?");
        pst.setInt(1,got_id_present);
          int rs2 = pst.executeUpdate();
        System.out.println("phase2");
        pst = con.prepareStatement("DELETE FROM mydb.report WHERE id_present = ?");
        pst.setInt(1,got_id_present);
          int rs3 = pst.executeUpdate();
        System.out.println("phase3");
        Table2();
        
        
        
        
        
    } catch (SQLException ex) {
        Logger.getLogger(Archive.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtgotSectionTImeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgotSectionTImeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgotSectionTImeActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
      try {
        int row = jTable2.getSelectedRow();
        txtPresentName.setText(jTable2.getModel().getValueAt(row, 0).toString());
        String present_name_get = jTable2.getModel().getValueAt(row, 0).toString();
        pst = con.prepareStatement("SELECT id_section_report FROM mydb.report WHERE name_present = ?");
        pst.setString(1,present_name_get);
        ResultSet rs = pst.executeQuery();
        int got_id_sect_timeplace = 0;
        while(rs.next())
        { 
         got_id_sect_timeplace = rs.getInt(1);
        }
        
        PreparedStatement pst2=con.prepareStatement("SELECT id_section_got, date, place, time FROM mydb.section_timeplace WHERE idsection_timeplace =?");
        pst2.setInt(1,got_id_sect_timeplace);
        ResultSet rs2 = pst2.executeQuery();
        int id_sect_get = 0;
        while(rs2.next())
        { 
        id_sect_get = rs2.getInt(1);
        txtgotSectionDate.setText(rs2.getString(2));
        txtgotSectionPlace.setText(rs2.getString(3));
        txtgotSectionTIme.setText(rs2.getString(4));
        }
    
        PreparedStatement pst3 = con.prepareStatement("SELECT section_name FROM mydb.section WHERE id_section =?");
        pst3.setInt(1,id_sect_get);
        ResultSet rs3 = pst3.executeQuery();
        
            while(rs3.next()){ 
                txtgotSection.setText(rs3.getString(1));
            }
            
            
        PreparedStatement pst_id_pres = con.prepareStatement("SELECT id_present FROM mydb.report WHERE name_present = ?");
        pst_id_pres.setString(1,present_name_get);
        ResultSet rs_id_pres = pst_id_pres.executeQuery();
        int got_id_present = 0;
        while(rs_id_pres.next())
        { 
         got_id_present = rs_id_pres.getInt(1);
        }
            
        PreparedStatement pst4 = con.prepareStatement("SELECT id_written_by, ochno FROM mydb.transit_table_reportauthor WHERE id_present_tranistreport = ?");
        pst4.setInt(1,got_id_present);   
        ResultSet rs4= pst4.executeQuery();
        Vector v2 = new Vector();
        Vector V1 = new Vector();
        while (rs4.next()) {
            v2.add(rs4.getString("id_written_by"));
            V1.add(rs4.getString("ochno"));
        }
        
        
        DefaultTableModel DFM = (DefaultTableModel) jTable1.getModel();
        DFM.setRowCount(0);
        
        for(int i =0; i < v2.size();i++){
            
           String a = v2.get(i).toString();
           String b = V1.get(i).toString();
           PreparedStatement pst_c_1=con.prepareStatement("SELECT id_author_transitorg, id_org_transit FROM mydb.transit_org_author WHERE id_from_org =?");
           pst_c_1.setString(1,a);
           ResultSet rs_c_1 = pst_c_1.executeQuery();
           int id_got_author = 0;
           int id_got_org = 0;
           while(rs_c_1.next())
            { 
                id_got_author= rs_c_1.getInt(1);
                id_got_org= rs_c_1.getInt(2);
            }

            pst = con.prepareStatement("SELECT CONCAT(author.family_name,\" \", author.name,\" \", author.otchestvo) AS FIO, organization.org_name, organization.city, organization.country FROM ((mydb.transit_org_author INNER JOIN mydb.author ON ? = author.id_author)INNER JOIN mydb.organization ON ? = organization.id_org)");
            pst.setInt(1, id_got_author);
            pst.setInt(2, id_got_org);
            ResultSet Rs = pst.executeQuery();
            
            
            String FIO_get="";
            String org_name_get="";
            String city_get="";
            String country_get="";
            String ochnost_get = "-";
            
            while(Rs.next())
           {  
              
             FIO_get = Rs.getString(1);
             org_name_get = Rs.getString(2);
             city_get = Rs.getString(3);
             country_get = Rs.getString(4);
             if( "1".equals(b)){
                 ochnost_get="+";
             }
            }
            
             DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
             model.addRow(new Object[] { FIO_get, org_name_get,city_get,country_get,ochnost_get });
            
            jTable1.setModel(model);
            jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            
            
            
            
        }   
        
        
        
        txtRanking.setText(jTable2.getModel().getValueAt(row, 2).toString());    
        PreparedStatement pst5=con.prepareStatement("SELECT name_file FROM mydb.file_storage WHERE idfile_storage = ?");
        pst5.setInt(1, got_id_present);
        ResultSet rs5 = pst5.executeQuery();
        while(rs5.next())
        { 
        txtgotFileName.setText(rs5.getString(1));
        }
        
    } catch (SQLException ex) {
        Logger.getLogger(Archive.class.getName()).log(Level.SEVERE, null, ex);
    }

    }//GEN-LAST:event_jTable2MouseClicked

    public void Table1(){
                try {
           PreparedStatement pst2=con.prepareStatement("SELECT id_author_transitorg, id_org_transit FROM mydb.transit_org_author WHERE id_from_org =?");
           pst2.setInt(1,getAuthors.returnIDFromOrg());
           ResultSet rs2 = pst2.executeQuery();
           int id_got_author = 0;
           int id_got_org = 0;
           while(rs2.next())
            { 
                id_got_author= rs2.getInt(1);
                id_got_org= rs2.getInt(2);
            }
           // System.out.println(id_got_author);
            //System.out.println(id_got_org);
            pst = con.prepareStatement("SELECT CONCAT(author.family_name,\" \", author.name,\" \", author.otchestvo) AS FIO, organization.org_name, organization.city, organization.country FROM ((mydb.transit_org_author INNER JOIN mydb.author ON ? = author.id_author)INNER JOIN mydb.organization ON ? = organization.id_org)");
            pst.setInt(1, id_got_author);
            pst.setInt(2, id_got_org);
            ResultSet Rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            
            ResultSetMetaData RSMD = Rs.getMetaData();
            int CC = RSMD.getColumnCount();
            DefaultTableModel DFT = (DefaultTableModel) jTable1.getModel();
            DFT.setRowCount(0);
            String ochnost_get = "";
            while(Rs.next())
           {  
               Vector v2 = new Vector();
                
                    
                    v2.add(Rs.getString("FIO"));
                    v2.add(Rs.getString("org_name"));
                    v2.add(Rs.getString("city"));
                    v2.add(Rs.getString("country"));
                    v2.add(ochnost_get);
                DFT.addRow(v2);
            }
            jTable1.setModel(model);
            jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }         
    }
    
        public void addRoots(){
                
        try {
           PreparedStatement pst2=con.prepareStatement("SELECT id_author_transitorg, id_org_transit FROM mydb.transit_org_author WHERE id_from_org =?");
           pst2.setInt(1,getAuthors.returnIDFromOrg());
           All_Authors[t-1]=getAuthors.returnIDFromOrg();
           t++;
           ResultSet rs2 = pst2.executeQuery();
           int id_got_author = 0;
           int id_got_org = 0;
           while(rs2.next())
            { 
                id_got_author= rs2.getInt(1);
                id_got_org= rs2.getInt(2);
            }
            System.out.println(id_got_author);
            System.out.println(id_got_org);
            pst = con.prepareStatement("SELECT CONCAT(author.family_name,\" \", author.name,\" \", author.otchestvo) AS FIO, organization.org_name, organization.city, organization.country FROM ((mydb.transit_org_author INNER JOIN mydb.author ON ? = author.id_author)INNER JOIN mydb.organization ON ? = organization.id_org)");
            pst.setInt(1, id_got_author);
            pst.setInt(2, id_got_org);
            ResultSet Rs = pst.executeQuery();
            
            
            String FIO_get="";
            String org_name_get="";
            String city_get="";
            String country_get="";
            String ochnost_get = "-";
            while(Rs.next())
           {  
              
             FIO_get = Rs.getString(1);
             org_name_get = Rs.getString(2);
             city_get = Rs.getString(3);
             country_get = Rs.getString(4);
             if(OchnoZaochnoBox.isSelected()){
                 ochnost_get="+";
             }
            }
             DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
             model.addRow(new Object[] { FIO_get, org_name_get,city_get,country_get,ochnost_get });
            
            jTable1.setModel(model);
            jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    
        public void Table2()
    {
        try {
            pst = con.prepareStatement("SELECT report.name_present, report.final_ranking , section.section_name FROM mydb.report INNER JOIN mydb.section ON section.id_section = (SELECT id_section_got FROM mydb.section_timeplace WHERE idsection_timeplace = report.id_section_report) ");
            ResultSet Rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
          
            ResultSetMetaData RSMD = Rs.getMetaData();
            int CC = RSMD.getColumnCount();
            DefaultTableModel DFT = (DefaultTableModel) jTable2.getModel();
            DFT.setRowCount(0);
            
            while(Rs.next())
           {  
               Vector v2 = new Vector();
                for (int ii = 1; ii <= CC; ii++) {
                    v2.add(Rs.getString("name_present"));
                    v2.add(Rs.getString("section_name"));
                    v2.add(Rs.getString("final_ranking"));
                }
                DFT.addRow(v2);
            }
            jTable2.setModel(model);
            jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }      
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Archive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Archive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Archive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Archive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Archive().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox OchnoZaochnoBox;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JTextArea txtPresentName;
    private javax.swing.JTextField txtRanking;
    private javax.swing.JTextField txtgotFileName;
    public javax.swing.JTextField txtgotSection;
    public javax.swing.JTextField txtgotSectionDate;
    public javax.swing.JTextField txtgotSectionPlace;
    public javax.swing.JTextField txtgotSectionTIme;
    private javax.swing.JButton wipeFIle;
    // End of variables declaration//GEN-END:variables
}
