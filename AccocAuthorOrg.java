

import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author senhe
 */
public class AccocAuthorOrg extends javax.swing.JFrame {
public static final String DB_URL = "jdbc:mysql://localhost/mydb";
public static final String DB_Driver = "com.mysql.jdbc.Driver";
public static final String DB_Password = "Alushta2022";
private int needed_id_root;
private int amount_of_roots = 0;
/**
     * Creates new form AccocAuthorOrg
     */
    public AccocAuthorOrg() {
        initComponents();
        setDefaultCloseOperation(AccocAuthorOrg.DISPOSE_ON_CLOSE);
        Connect();
        Table();
        Table_Org();
        Table_Author();
    }
       Connection con;
    PreparedStatement pst;
        
    public void Connect(){
        try {
            Class.forName(DB_Driver);
            con = DriverManager.getConnection(DB_URL,"root",DB_Password);
            System.out.println("connect");
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Archive.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Archive.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        txtAuthorSearch = new javax.swing.JTextField();
        txtOrgSearch = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        txtSearchTransit = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setText("Автор");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setText("Организация");

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Ф.И.О.", "Организация", "Город", "Страна"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowGrid(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setText("...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setText("Справочник источников");

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setText("Добавить");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setText("Удалить");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Наим.орг.", "Город", "Страна"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setShowGrid(true);
        jScrollPane2.setViewportView(jTable2);

        jTable3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Ф.И.О"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setShowGrid(true);
        jScrollPane3.setViewportView(jTable3);

        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton6.setText("Найти");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton7.setText("Найти");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton8.setText("Сбросить");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton9.setText("Сбросить");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        txtAuthorSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtAuthorSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAuthorSearchActionPerformed(evt);
            }
        });

        txtOrgSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jToggleButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jToggleButton1.setText("Найти");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        txtSearchTransit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(472, 472, 472))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAuthorSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(172, 172, 172)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jToggleButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSearchTransit, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4)))
                        .addGap(4, 4, 4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)
                        .addContainerGap(155, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(txtOrgSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtOrgSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2))
                            .addGap(90, 90, 90))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(100, 100, 100)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1)
                                .addComponent(txtAuthorSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton6)
                                .addComponent(jButton8))
                            .addGap(48, 48, 48)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(txtSearchTransit))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7)
                            .addComponent(jButton9))
                        .addGap(26, 26, 26)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       new OrganizationForm().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
        int row2 = jTable2.getSelectedRow();
        String org_name_get_from_table = jTable2.getModel().getValueAt(row2, 0).toString();
        String city_get_from_table = jTable2.getModel().getValueAt(row2, 1).toString();
        PreparedStatement pst2 = con.prepareStatement("SELECT id_org FROM mydb.organization WHERE org_name = ? AND city = ?");
        pst2.setString(1,org_name_get_from_table);
        pst2.setString(2,city_get_from_table);
        ResultSet rs2 = pst2.executeQuery();
        int got_id_org = 0;
        while(rs2.next())
        { 
         got_id_org = rs2.getInt(1);
        }
        
        int row3 = jTable3.getSelectedRow();
        String author_name_get_from_table = jTable3.getModel().getValueAt(row3, 0).toString();
        String[] data = author_name_get_from_table.split(" ");
        author_name_get_from_table = data[0];
        String name_get = data[1];
        PreparedStatement pst3 = con.prepareStatement("SELECT id_author FROM  mydb.Author WHERE family_name = ? AND name =?");
        pst3.setString(1,author_name_get_from_table);
        pst3.setString(2,name_get);
        ResultSet rs3 = pst3.executeQuery();
        int got_id_author = 0;
        while(rs3.next())
        { 
         got_id_author = rs3.getInt(1);
        }

        pst = con.prepareStatement("INSERT INTO mydb.transit_org_author (id_author_transitorg,id_org_transit) values (?,?)");
        pst.setInt(1, got_id_author);
        pst.setInt(2, got_id_org);
        
        int k = pst.executeUpdate();
        
        if(k==1)
        {
            JOptionPane.showMessageDialog(this, "Автор прикреплен");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Ошибка");
        }
        Table();
        
        
        
        
    } catch (SQLException ex) {
        Logger.getLogger(SectionForm.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
        int row = jTable1.getSelectedRow();
        String author_name_get_from_table = jTable1.getModel().getValueAt(row, 0).toString();
        String[] data = author_name_get_from_table.split(" ");
        author_name_get_from_table = data[0];
        String name_get = data[1];
        PreparedStatement pst3 = con.prepareStatement("SELECT id_author FROM  mydb.Author WHERE family_name = ? AND name =?");
        pst3.setString(1,author_name_get_from_table);
        pst3.setString(2,name_get);
        ResultSet rs3 = pst3.executeQuery();
        int got_id_author = 0;
        while(rs3.next())
        { 
         got_id_author = rs3.getInt(1);
        }
        //System.out.println(got_id_author);
        String org_name_get_from_table = jTable1.getModel().getValueAt(row, 1).toString();
        String city_get_from_table = jTable1.getModel().getValueAt(row, 2).toString();
        PreparedStatement pst2 = con.prepareStatement("SELECT id_org FROM mydb.organization WHERE org_name LIKE ? AND city = ?");
        pst2.setString(1,org_name_get_from_table);
        pst2.setString(2,city_get_from_table);
        ResultSet rs2 = pst2.executeQuery();
        int got_id_org = 0;
        while(rs2.next())
        { 
         got_id_org = rs2.getInt(1);
        }
        //System.out.println(got_id_org);
        pst = con.prepareStatement("DELETE FROM mydb.transit_org_author WHERE id_author_transitorg=? AND id_org_transit=?");
        pst.setInt(1, got_id_author);
        pst.setInt(2, got_id_org);
        
        int k = pst.executeUpdate();
        
        if(k==1)
        {
            JOptionPane.showMessageDialog(this, "Автор откреплен");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Ошибка");
        }
        Table();
        
        
        
        
        
    } catch (SQLException ex) {
        Logger.getLogger(SectionForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       new AuthorForm().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
           try {
        String author_search = txtAuthorSearch.getText();
        pst = con.prepareStatement("SELECT CONCAT(author.family_name,' ', author.name,' ', author.otchestvo) AS full_name FROM  mydb.Author WHERE CONCAT(family_name, name, otchestvo) LIKE ? ");
        pst.setString(1,"%" + author_search + "%");
        ResultSet Rs = pst.executeQuery();
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
            
        ResultSetMetaData RSMD = Rs.getMetaData();
        int CC = RSMD.getColumnCount();
        DefaultTableModel DFT = (DefaultTableModel) jTable3.getModel();
        DFT.setRowCount(0);
            
        while(Rs.next())
           {  
               Vector v2 = new Vector();
                for (int ii = 1; ii <= CC; ii++) {
                    v2.add(Rs.getString("full_name"));
                }
                DFT.addRow(v2);
        }
        jTable3.setModel(model);
        jTable3.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    } catch (SQLException ex) {
        Logger.getLogger(SectionForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Table_Author();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        Table_Org();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void txtAuthorSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAuthorSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAuthorSearchActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
        String org_search = txtOrgSearch.getText();
        pst = con.prepareStatement("SELECT org_name, city, country FROM  mydb.organization WHERE CONCAT(org_name, city, country) LIKE ?");
        pst.setString(1,"%"+org_search+"%");
        ResultSet Rs = pst.executeQuery();
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            
        ResultSetMetaData RSMD = Rs.getMetaData();
        int CC = RSMD.getColumnCount();
        DefaultTableModel DFT = (DefaultTableModel) jTable2.getModel();
        DFT.setRowCount(0);
            
        while(Rs.next())
           {  
               Vector v2 = new Vector();
                for (int ii = 1; ii <= CC; ii++) {
                    v2.add(Rs.getString("org_name"));
                    v2.add(Rs.getString("city"));
                    v2.add(Rs.getString("country"));
                }
                DFT.addRow(v2);
        }
        jTable2.setModel(model);
        jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    } catch (SQLException ex) {
        Logger.getLogger(SectionForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        try {
        String author_name_get_from_table = txtSearchTransit.getText();
        String[] data = author_name_get_from_table.split(" ");
        author_name_get_from_table = data[0];
        //String name_get = data[1];
        PreparedStatement pst3 = con.prepareStatement("SELECT id_author FROM  mydb.Author WHERE CONCAT(family_name, name, otchestvo) LIKE ?");
        pst3.setString(1,"%"+author_name_get_from_table+"%");
        //pst3.setString(2,"%"+name_get+"%");
        ResultSet rs3 = pst3.executeQuery();
        int got_id_author = 0;
        while(rs3.next())
        { 
         got_id_author = rs3.getInt(1);
        }
        
        pst = con.prepareStatement("SELECT CONCAT(author.family_name,\" \", author.name,\" \", author.otchestvo) AS FIO, organization.org_name, organization.city, organization.country FROM ((mydb.transit_org_author INNER JOIN mydb.author ON transit_org_author.id_author_transitorg = author.id_author AND author.id_author =? )INNER JOIN mydb.organization ON transit_org_author.id_org_transit = organization.id_org)");
        pst.setInt(1, got_id_author);
        ResultSet Rs = pst.executeQuery();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            
        ResultSetMetaData RSMD = Rs.getMetaData();
        int CC = RSMD.getColumnCount();
        DefaultTableModel DFT = (DefaultTableModel) jTable1.getModel();
        DFT.setRowCount(0);
            
            while(Rs.next())
           {  
               Vector v2 = new Vector();
                for (int ii = 1; ii <= CC; ii++) {
                    v2.add(Rs.getString("FIO"));
                    v2.add(Rs.getString("org_name"));
                    v2.add(Rs.getString("city"));
                    v2.add(Rs.getString("country"));
                }
                DFT.addRow(v2);
            }
            jTable1.setModel(model);
            jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        
        
        
    } catch (SQLException ex) {
        Logger.getLogger(SectionForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        mouseClicked(evt);
    }//GEN-LAST:event_jTable1MouseClicked
    public void Table()
    {
        try {
            pst = con.prepareStatement("SELECT CONCAT(author.family_name,\" \", author.name,\" \", author.otchestvo) AS FIO, organization.org_name, organization.city, organization.country FROM ((mydb.transit_org_author INNER JOIN mydb.author ON transit_org_author.id_author_transitorg = author.id_author)INNER JOIN mydb.organization ON transit_org_author.id_org_transit = organization.id_org)");
            ResultSet Rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            
            ResultSetMetaData RSMD = Rs.getMetaData();
            int CC = RSMD.getColumnCount();
            DefaultTableModel DFT = (DefaultTableModel) jTable1.getModel();
            DFT.setRowCount(0);
            
            while(Rs.next())
           {  
               Vector v2 = new Vector();
                for (int ii = 1; ii <= CC; ii++) {
                    v2.add(Rs.getString("FIO"));
                    v2.add(Rs.getString("org_name"));
                    v2.add(Rs.getString("city"));
                    v2.add(Rs.getString("country"));
                }
                DFT.addRow(v2);
            }
            jTable1.setModel(model);
            jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }      
    }
        public void Table_Org()
    {
        try {
            pst = con.prepareStatement("SELECT * FROM mydb.organization");
            ResultSet Rs = pst.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            
            ResultSetMetaData RSMD = Rs.getMetaData();
            int CC = RSMD.getColumnCount();
            DefaultTableModel DFT = (DefaultTableModel) jTable2.getModel();
            DFT.setRowCount(0);
            
            while(Rs.next())
           {  
               Vector v3 = new Vector();
                for (int ii = 1; ii <= CC; ii++) {
                    v3.add(Rs.getString("org_name"));
                    v3.add(Rs.getString("city"));
                    v3.add(Rs.getString("country"));
                }
                DFT.addRow(v3);
            }
            jTable2.setModel(model);
            jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }      
    }
            public void mouseClicked(MouseEvent event){
        if (event.getClickCount() == 2 && event.getButton() == MouseEvent.BUTTON1) {
            getIDFromOrg();
        }

    }
        public void getIDFromOrg(){
            try {
                
        int row = jTable1.getSelectedRow();
        String author_name_get_from_table = jTable1.getModel().getValueAt(row, 0).toString();
        String[] data = author_name_get_from_table.split(" ");
        author_name_get_from_table = data[0];
        String name_get = data[1];
        PreparedStatement pst3 = con.prepareStatement("SELECT id_author FROM  mydb.Author WHERE family_name = ? AND name =?");
        pst3.setString(1,author_name_get_from_table);
        pst3.setString(2,name_get);
        ResultSet rs3 = pst3.executeQuery();
        int got_id_author = 0;
        while(rs3.next())
        { 
         got_id_author = rs3.getInt(1);
        }
        

        String org_name_get_from_table = jTable1.getModel().getValueAt(row, 1).toString();
        String city_get_from_table = jTable1.getModel().getValueAt(row, 2).toString();
        PreparedStatement pst2 = con.prepareStatement("SELECT id_org FROM mydb.organization WHERE org_name LIKE ? AND city = ?");
        pst2.setString(1,org_name_get_from_table);
        pst2.setString(2,city_get_from_table);
        ResultSet rs2 = pst2.executeQuery();
        int got_id_org = 0;
        while(rs2.next())
        { 
         got_id_org = rs2.getInt(1);
        }
       
        
        
        pst = con.prepareStatement("SELECT id_from_org FROM mydb.transit_org_author WHERE id_author_transitorg=? AND id_org_transit=?");
        pst.setInt(1, got_id_author);
        pst.setInt(2, got_id_org);
        ResultSet Rs = pst.executeQuery();
        
            while(Rs.next())
           {  
               this.needed_id_root = Rs.getInt(1);
            }
        System.out.println(needed_id_root);    
        this.setVisible(false);
    } catch (SQLException ex) {
        Logger.getLogger(SectionForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }

    public int returnIDFromOrg(){
        return needed_id_root;
    } 
        
        public void Table_Author()
    {
        try {
            pst = con.prepareStatement("SELECT CONCAT(author.family_name,' ', author.name,' ', author.otchestvo) AS full_name FROM mydb.author order by id_author");
            ResultSet Rs = pst.executeQuery();
            DefaultTableModel model3 = (DefaultTableModel) jTable3.getModel();
          
            ResultSetMetaData RSMD = Rs.getMetaData();
            int CC = RSMD.getColumnCount();
            DefaultTableModel DFT = (DefaultTableModel) jTable3.getModel();
            DFT.setRowCount(0);
            
            while(Rs.next())
           {  
               Vector v2 = new Vector();
                for (int ii = 1; ii <= CC; ii++) {
                    v2.add(Rs.getString("full_name"));
                }
                DFT.addRow(v2);
            }
            jTable3.setModel(model3);
            jTable3.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }      
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccocAuthorOrg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccocAuthorOrg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccocAuthorOrg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccocAuthorOrg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccocAuthorOrg().setVisible(true);
            }
        });
    }
    
   // Vector comboBoxItems1=new Vector();
    //final DefaultComboBoxModel author_model = new DefaultComboBoxModel(comboBoxItems1);
    //Vector comboBoxItems2=new Vector();
    //final DefaultComboBoxModel org_model = new DefaultComboBoxModel(comboBoxItems1);
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField txtAuthorSearch;
    private javax.swing.JTextField txtOrgSearch;
    private javax.swing.JTextField txtSearchTransit;
    // End of variables declaration//GEN-END:variables
}
